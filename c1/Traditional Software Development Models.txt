Q: Which of the following is true for adaptive models? (Select any two)

○ You may end-up building something different than what you originally thought
○ You are not sure about what exactly you want to build
You discourage change during the development process
Adaptive model is the best model in all situations

Q: A team divided the application they were building into 4 parts and planning to build one part at a time. To build each part, they are planning to go through the steps of requirements, design, implementation, test, and deployment. Also, they are planning to complete each part fully with high fidelity. By fidelity we mean the completeness of the features implemented in each part. Based on this information, what type of model do you suggest they use for their software development process?

○ Incremental
Iterative and Incremental
Iterative

Q: A team is working on a problem where the requirements are well known but they are short on time. They prefer to start the design phase when some of the requirements have been defined. Similarly, they want to start coding when the design for part of the system is ready. What model will best fit their needs?

○ Sashimi
V-model
Waterfall
Spiral

Q: In the incremental model variation where you do requirements and design for all of the application once and then just increment on implementation, testing, and deployment, are you making the process more suitable for a predictive or adaptive situation?

○ Predictive
Adaptive

Q: Which of following is NOT true about incremental and iterative models? 

○ An incremental model is one where you can build each part of the system individually but you release all at once.
Iterative approaches release every feature with low fidelity and then improve fidelity over time. By fidelity we mean the completeness of the feature.
Incremental approaches release features as they are finished with high fidelity.
In a model which is both iterative and incremental, we release features when they are usable. Over time the development team improves existing features and adds new ones

Q: Which of the following is NOT true for the Waterfall model, V-model and Sashimi model?

○ These models will be a good model to be used by a startup implement a new idea that is new to market
In these models, the cost of change depends on how late we find out about the change. If problem requiring a change is found during the implementation phase, it will be more expensive to fix than one found during the design phase.
In these models, we assume that we know requirements really well.
In these models, the team is expected to know the solution really well.

Q: In the Unified Process, what does the milestone of \"Lifecycle Architecture\" mean?

○ Agreement among the stakeholders about the technical approach.
Agreement among stakeholders about the objectives of the project and to proceed with the project.
Agreement among the stakeholders about the deployment of the system to actual users.

Q: Which of the following is true for the Unified Process? (select any 3)

○ It is a framework and not a specific model.
○ It is an architecture-centric framework.
○ The construction phase supports both iterative and incremental approaches.
It is a predictive framework.
It is a very simple framework to follow.

Q: Select situations listed below where you would NOT use the Unified Process framework.

○ Very small, simple project where the problem and solution are well known.
Situation where the organization wants to deliver part of the application early to capture the market ahead of competition.
Medium-sized project with some risks involved.
All requirements are not known early in the project.

Q: Which of the following is NOT true for Spiral Model?

○ You always have to perform all the steps mentioned in the Spiral Model diagram
It minimizes waste by allowing teams to tailor the effort put into different processes based on the risk involved in each cycle.
It is suitable for very large high risk projects
Spiral Model is not a model but a process model generator.

Q: Which of the following is NOT the benefits of the Unified Process?

○ Easy to understand and implement.
Flexible for handling change.
Supports to incorporate other models in the process for example you can use Agile in the construction phase.
Supports / encourages risk identification and mitigation.
Supports quality and reuse by putting an emphasis on architecture.